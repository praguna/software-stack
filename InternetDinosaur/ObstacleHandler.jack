class ObstacleHandler{
    field int x,y;
    field Array A;
    field int next;
    field int wait;

    constructor ObstacleHandler new(int Ax, int Ay){
        var int i;
        let x = Ax;
        let y = Ay;
        let A = Array.new(25);
        while(i < 25){
            let A[i] = Cactus.new(x,y);
            let i = i + 1; 
        }
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method void respwan(){
        var Array c;
        var Cactus cactus;
        let c = A[next];
        let c[0] = x;
        let c[1] = y;
        let c[2] = 0;
        let c[3] = 0;
        let cactus = c;
        do cactus.show();
        return;
    }

    method void animate(){
        var int i;
        var Array c;
        var Cactus cactus;
        while(i < 25){
            let c = A[i];
            if ( ~(c[3] = -1) ){
                let cactus = c;
                do cactus.moveLeft();
            }else{
                let next = i;
            }
            let i = i+1;
        }
        if ( wait > 0 ){
            let wait = wait - 1;
        }else{
            let wait = Commons.randomTimeStepWait();
            do respwan();
        }
        return;   
    }
}