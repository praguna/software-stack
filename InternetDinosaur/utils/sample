var int memAddress;
let location = getLocation();
let memAddress = 16384+location;
do Memory.poke(memAddress+0, 1016);
do Memory.poke(memAddress+32, 1016);
do Memory.poke(memAddress+64, 792);
do Memory.poke(memAddress+96, 792);
do Memory.poke(memAddress+128, 792);
do Memory.poke(memAddress+160, 792);
do Memory.poke(memAddress+192, 1016);
do Memory.poke(memAddress+224, 1016);
do Memory.poke(memAddress+256, 0);
do Memory.poke(memAddress+288, 0);
do Memory.poke(memAddress+320, 0);
do Memory.poke(memAddress+352, 0);
do Memory.poke(memAddress+384, 0);
do Memory.poke(memAddress+416, 0);
do Memory.poke(memAddress+448, 0);
do Memory.poke(memAddress+480, 0);
return;

        // if(x < 4){
        //     let color = false;
        //     // do Screen.setColor(color);
        //     let factor = 4;
        // }
        // if(x > 508){
        //     let color = true;
        //     // do Screen.setColor(color);
        //     let factor = -4;
        // }
        // if(x < 10){
        //     do Output.printInt(factor);
        //     do Output.printString("  ");
        //     do Output.printInt(color);
        //     do Output.printString("  ");
        //     do Output.printInt(x);
        //     do Output.printString("  ");
        // }

  var int memAddress;       
        let memAddress = 16384+Commons.getLocation(x,y);
        do Memory.poke(memAddress+0, 1280);
        do Memory.poke(memAddress+32, 16);
        do Memory.poke(memAddress+64, 9100);
        do Memory.poke(memAddress+96, -27647);
        do Memory.poke(memAddress+128, -16126);
        do Memory.poke(memAddress+160, 225);
        do Memory.poke(memAddress+192, 4);
        do Memory.poke(memAddress+224, 13324);
        do Memory.poke(memAddress+256, 2242);
        do Memory.poke(memAddress+288, 16384);
        do Memory.poke(memAddress+320, 16384);
        do Memory.poke(memAddress+352, 1040);
        do Memory.poke(memAddress+384, 3276);
        do Memory.poke(memAddress+416, -11896);
        do Memory.poke(memAddress+448, 16802);
        do Memory.poke(memAddress+480, 5);
        return;